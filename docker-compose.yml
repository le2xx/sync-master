version: '3'

services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

  backend:
    build:
      context: .
      dockerfile: apps/backend/Dockerfile
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      JWT_SECRET: uA7A/NRITwAFd5KEFFAnQoJ0DjMQKDSwKyOQYALVl7pOBm8Ae1qxOO7RCCG31qt3Y+gCCNuLaoV/kyhj2WrK5ay2bjJt5LHHGgQoq1Eys2p9N9w51gH/+xKLNcrbxjRfgE97g/eMKigEtMPalwtR12xn7NemIHjvbOIJTu4I4UPd2Lwr07jQ/w1IcvrB1C/Q8xFUNfBQGZDarKsA3C+r6BBhMZAHCn/VtXCDK7lknAt6eZLs3FbFk00IQGrWHcEl+o5iM4gHom3rCrK7NFALwY4kTyJUM+V5zs7mqZ09xchPOmjgwkInmmKXJJYXZJNWQRHvOUJJ7gq/FdoLEGkLLA==
      JWT_EXPIRES: 15m
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: sync_master
      DATABASE_URL: postgres://postgres:password@postgres:5432/sync_master
    depends_on:
      - postgres
    networks:
      - app-network

  frontend:
    build:
      context: .
      dockerfile: apps/frontend/Dockerfile
    ports:
      - "8080:80"
    depends_on:
      - backend
    networks:
      - app-network

  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: sync_master
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    ports:
      - "5432:5432"

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
